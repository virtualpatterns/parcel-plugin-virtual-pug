{"version":3,"sources":["../../../source/test/library/asset.test.js"],"names":["Bundler","CreateRealContent","Format","Path","Pug","Test","URL","Plugin","FilePath","_URL","fileURLToPath","import","meta","url","FolderPath","dirname","Require","_createRequire","test","bundler","resolve","bundle","local","module","pathToFileURL","virtualContentFn","default","virtualContent","map","realContent","toString","join","realContentFn","compileFile","log","is"],"mappings":"gFAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,KAAjB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,QAAQ,GAVdC,IAAI,CAACC,aAAL,CAAmBC,MAAM,CAACC,IAAP,CAAYC,GAA/B,CAUA;AACA,MAAMC,UAAU,GAAGX,IAAI,CAACY,OAAL,CAAaP,QAAb,CAAnB;AACA,MAAMQ,OAAO,GAZbC,cAAc,CAACN,MAAM,CAACC,IAAP,CAAYC,GAAb,CAYd;;AAEAR,IAAI,CAAC,2DAAD,EAA8D,MAAOa,IAAP,IAAgB;;AAEhF,MAAIC,OAAO,GAAG,IAAInB,OAAJ,CAAYgB,OAAO,CAACI,OAAR,CAAgB,oBAAhB,CAAZ,EAAmD;AAC/D,aAAS,KADsD;AAE/D,cAAW,GAAEN,UAAW,SAFuC;AAG/D,eAAW,YAHoD;AAI/D,cAAU,MAJqD;AAK/D,aAAS,KALsD;AAM/D,gBAAY,CANmD,EAAnD,CAAd;;;AASA,QAAMP,MAAM,CAACY,OAAD,CAAZ;AACA,QAAMA,OAAO,CAACE,MAAR,EAAN;;AAEA,MAAIC,KAAK,GAAG,EAAE,QAAQ,KAAV,EAAZ;;AAEA,MAAIC,MAAM,GAAG,MAAM,OAAOjB,GAAG,CAACkB,aAAJ,CAAkBR,OAAO,CAACI,OAAR,CAAgB,qBAAhB,CAAlB,CAAP,CAAnB;AACA,MAAIK,gBAAgB,GAAGF,MAAM,CAACG,OAAP,CAAeA,OAAtC;;AAEA,MAAIC,cAAc,GAAG,IAArB;AACAA,EAAAA,cAAc,GAAGF,gBAAgB,CAACH,KAAD,CAAjC;AACAK,EAAAA,cAAc,GAAGA,cAAc;AAC5BC,EAAAA,GADc,CACTD,cAAD,IAAoB1B,iBAAiB,CAAC0B,cAAD,CAD3B;AAEdC,EAAAA,GAFc,CAETC,WAAD,IAAiBA,WAAW,CAACC,QAAZ,EAFP;AAGdC,EAAAA,IAHc,CAGT,IAHS,CAAjB;;AAKAJ,EAAAA,cAAc,GAAGzB,MAAM,CAACyB,cAAD,CAAvB;;AAEA,MAAIK,aAAa,GAAG5B,GAAG,CAAC6B,WAAJ,CAAgBjB,OAAO,CAACI,OAAR,CAAgB,qBAAhB,CAAhB,CAApB;AACA,MAAIS,WAAW,GAAG3B,MAAM,CAAC8B,aAAa,CAACV,KAAD,CAAd,CAAxB;;AAEAJ,EAAAA,IAAI,CAACgB,GAAL,CAAU,oBAAmBP,cAAe,EAA5C;AACAT,EAAAA,IAAI,CAACgB,GAAL,CAAU,oBAAmBL,WAAY,EAAzC;AACAX,EAAAA,IAAI,CAACiB,EAAL,CAAQR,cAAR,EAAwBE,WAAxB;;AAED,CAnCG,CAAJ","sourcesContent":["import Bundler from 'parcel-bundler'\nimport CreateRealContent from 'virtual-dom/create-element.js'\nimport Format from 'pretty'\nimport Path from 'path'\nimport Pug from 'pug'\nimport Test from 'ava'\nimport URL from 'url'\n\nimport Plugin from '../../index.cjs'\n\nconst FilePath = __filePath\nconst FolderPath = Path.dirname(FilePath)\nconst Require = __require\n\nTest('Bundler(Require.resolve(\\'./source/source.js\\'), { ... })', async (test) => {\n\n  let bundler = new Bundler(Require.resolve('./source/source.js'), {\n    'cache': false,\n    'outDir': `${FolderPath}/target`,\n    'outFile': 'target.cjs',\n    'target': 'node',\n    'watch': false,\n    'logLevel': 4\n  })\n\n  await Plugin(bundler)\n  await bundler.bundle()\n  \n  let local = { 'name': 'Bob' }\n\n  let module = await import(URL.pathToFileURL(Require.resolve('./target/target.cjs')))\n  let virtualContentFn = module.default.default\n\n  let virtualContent = null\n  virtualContent = virtualContentFn(local)\n  virtualContent = virtualContent\n    .map((virtualContent) => CreateRealContent(virtualContent)) \n    .map((realContent) => realContent.toString())\n    .join('\\n')\n\n  virtualContent = Format(virtualContent)\n\n  let realContentFn = Pug.compileFile(Require.resolve('./source/source.pug'))\n  let realContent = Format(realContentFn(local))\n\n  test.log(`virtualContent = ${virtualContent}`)\n  test.log(`   realContent = ${realContent}`)\n  test.is(virtualContent, realContent)\n\n})\n"],"file":"asset.test.js"}