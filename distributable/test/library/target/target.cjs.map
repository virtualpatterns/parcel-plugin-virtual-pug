{"version":3,"sources":["source.pug","../../../../source/test/library/source/source.js"],"names":["ConvertToVirtualNode","VNode","VirtualNode","VText","VirtualText","__getNode","__local","__option","name","__getNodeName","__getNodeProperty","property","map","entry","Object","entries","sort","leftName","rightName","localeCompare","forEach","value","toUpperCase","__getChildNode","node","__createNode","childNode","createNodeFn","attributes","__node","push","convertToNode","flat","createNode","CreateVirtualNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;;;AALA;AACA;AAKA,MAAMA,oBAAoB,GAAG,yBAAsB;AACjDC,EAAAA,KAAK,EAAEC,cAD0C;AAEjDC,EAAAA,KAAK,EAAEC;AAF0C,CAAtB,CAA7B;;AAIA,SAASC,SAAT,CAAmBC,OAAO,GAAG,EAA7B,EAAiCC,QAAQ,GAAG,EAA5C,EAAgD;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAWF,OAAjB;;AACA,WAASG,aAAT,CAAuBD,IAAvB,EAA6B;AAC3B,WAAOA,IAAP;AACD;;AACD,WAASE,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,QAAIC,GAAG,GAAG,EAAV,CADmC,CACtB;;AAEb,QAAIC,KAAK,GAAGC,MAAM,CAACC,OAAP,CAAeJ,QAAf,CAAZ;AACAE,IAAAA,KAAK,CACFG,IADH,CACQ,CAAC,CAACC,QAAD,CAAD,EAAa,CAACC,SAAD,CAAb,KAA6BD,QAAQ,CAACE,aAAT,CAAuBD,SAAvB,CADrC,EAEGE,OAFH,CAEW,CAAC,CAACZ,IAAD,EAAOa,KAAP,CAAD,KAAmB;AAC1B,UAAIb,IAAI,CAACc,WAAL,MAAsBV,GAA1B,EAA+B;AAC7B,eAAOD,QAAQ,CAACH,IAAD,CAAf;AACAG,QAAAA,QAAQ,CAACC,GAAG,CAACJ,IAAI,CAACc,WAAL,EAAD,CAAH,IAA2Bd,IAA5B,CAAR,GAA4Ca,KAA5C;AACD;AACF,KAPH;AAQA,WAAOV,QAAP;AACD;;AACD,WAASY,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,WAAOA,IAAP;AACD;;AACD,WAASC,YAAT,CAAsBjB,IAAtB,EAA4BG,QAA5B,EAAsCe,SAAtC,EAAiDC,YAAjD,EAA+D;AAC7DnB,IAAAA,IAAI,GAAGC,aAAa,CAACD,IAAD,CAApB,CAD6D,CAClC;;AAE3BG,IAAAA,QAAQ,GAAGD,iBAAiB,CAACC,QAAD,CAA5B,CAH6D,CAGtB;;AAEvCe,IAAAA,SAAS,GAAGH,cAAc,CAACG,SAAD,CAA1B,CAL6D,CAKvB;;AAEtC,WAAOC,YAAY,CACjBnB,IADiB,EAEjB;AACEoB,MAAAA,UAAU,EAAEjB;AADd,KAFiB,EAKjBe,SALiB,CAAnB;AAOD;;AACD,WAASrB,SAAT,CAAmBE,QAAQ,GAAG,EAA9B,EAAkC;AAChC,UAAMsB,MAAM,GAAG,EAAf;;AACAA,IAAAA,MAAM,CAACC,IAAP,CACEL,YAAY,CACV,GADU,EAEV,EAFU,EAGV,CAAC,MAAM;AACL,YAAMI,MAAM,GAAG,EAAf;;AACAA,MAAAA,MAAM,CAACC,IAAP,CAAY,GAAG,CAACvB,QAAQ,CAACwB,aAAT,CAAuB,SAAvB,CAAD,EAAoCC,IAApC,EAAf;;AACA;AACE,YAAIX,KAAK,GAAGb,IAAZ;;AACA,YAAI,OAAOa,KAAP,KAAiB,QAArB,EAA+B;AAC7BQ,UAAAA,MAAM,CAACC,IAAP,CAAY,GAAG,CAACvB,QAAQ,CAACwB,aAAT,CAAuBV,KAAvB,CAAD,EAAgCW,IAAhC,EAAf;AACD,SAFD,MAEO;AACLH,UAAAA,MAAM,CAACC,IAAP,CAAYT,KAAZ;AACD;AACF;;AACDQ,MAAAA,MAAM,CAACC,IAAP,CAAY,GAAG,CAACvB,QAAQ,CAACwB,aAAT,CAAuB,GAAvB,CAAD,EAA8BC,IAA9B,EAAf;;AACA,aAAOH,MAAP;AACD,KAbD,GAHU,EAiBVtB,QAAQ,CAAC0B,UAjBC,CADd;;AAqBA,WAAOJ,MAAP;AACD;;AACD,SAAOxB,SAAS,CAACE,QAAD,CAAhB;AACD;;AACc,kBACbD,OAAO,GAAG,EADG,EAEbC,QAAQ,GAAG;AACT0B,EAAAA,UAAU,EAAEC,UADH;AAETH,EAAAA,aAAa,EAAE/B;AAFN,CAFE,EAMb;AACA,SAAOK,SAAS,CAACC,OAAD,EAAUC,QAAV,CAAhB;AACD;;;;;;;;;;;;;;AClFD","file":"target.cjs","sourceRoot":"../source","sourcesContent":["// Powered by @virtualpatterns/mablung-virtual-pug v0.0.1-13\n// FilePath = 'node_modules/@virtualpatterns/mablung-virtual-pug/distributable-commonjs/library/transform.cjs'\nimport CreateVirtualNode from 'virtual-dom/h.js'\nimport _ConvertToVirtualNode from 'html-to-vdom'\nimport VirtualNode from 'virtual-dom/vnode/vnode.js'\nimport VirtualText from 'virtual-dom/vnode/vtext.js'\nconst ConvertToVirtualNode = _ConvertToVirtualNode({\n  VNode: VirtualNode,\n  VText: VirtualText\n})\nfunction __getNode(__local = {}, __option = {}) {\n  const { name } = __local\n  function __getNodeName(name) {\n    return name\n  }\n  function __getNodeProperty(property) {\n    let map = {} // { 'CLASS': 'className', 'FOR': 'htmlFor', 'HTTP-EQUIV': 'httpEquiv' }\n\n    let entry = Object.entries(property)\n    entry\n      .sort(([leftName], [rightName]) => leftName.localeCompare(rightName))\n      .forEach(([name, value]) => {\n        if (name.toUpperCase() in map) {\n          delete property[name]\n          property[map[name.toUpperCase()] || name] = value\n        }\n      })\n    return property\n  }\n  function __getChildNode(node) {\n    return node\n  }\n  function __createNode(name, property, childNode, createNodeFn) {\n    name = __getNodeName(name) //\n\n    property = __getNodeProperty(property) //\n\n    childNode = __getChildNode(childNode) //\n\n    return createNodeFn(\n      name,\n      {\n        attributes: property\n      },\n      childNode\n    )\n  }\n  function __getNode(__option = {}) {\n    const __node = []\n    __node.push(\n      __createNode(\n        'p',\n        {},\n        (() => {\n          const __node = []\n          __node.push(...[__option.convertToNode('Hello, ')].flat())\n          {\n            let value = name\n            if (typeof value === 'string') {\n              __node.push(...[__option.convertToNode(value)].flat())\n            } else {\n              __node.push(value)\n            }\n          }\n          __node.push(...[__option.convertToNode('!')].flat())\n          return __node\n        })(),\n        __option.createNode\n      )\n    )\n    return __node\n  }\n  return __getNode(__option)\n}\nexport default function (\n  __local = {},\n  __option = {\n    createNode: CreateVirtualNode,\n    convertToNode: ConvertToVirtualNode\n  }\n) {\n  return __getNode(__local, __option)\n}\n","import ContentFn from './source.pug'\nexport { ContentFn as default }\n"]}